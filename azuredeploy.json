{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "vmPrefix": {
      "type": "string",
      "metadata": {
        "description": "Base string for naming resources (max length of 8)"
      },
      "maxLength": 8
    },
    "MasterVMsku": {
      "type": "string",
      "defaultValue": "Standard_DS4_v2",
      "allowedValues": [
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_F8s_v2",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D64s_v3",
        "Standard_F16s_v2",
        "Standard_F32s_v2",
        "Standard_F64s_v2"
      ],
      "metadata": {
        "description": "sku to use for the master VM"
      }
    },
    "masterImage": {
      "type": "string",
      "defaultValue": "RHEL_7.4",
      "allowedValues": [
        "CentOS_7.4",
        "RHEL_7.4"
      ],
      "metadata": {
        "description": "The VM image of the master nodes"
      }
    },
    "adminUserName": {
      "type": "string",
      "defaultValue": "azure-user",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "authenticationType": {
      "type": "string",
      "defaultValue": "sshPublicKey",
      "allowedValues": [
        "sshPublicKey"
      ],
      "metadata": {
        "description": "Authentication type for the virtual machines"
      }
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCdxNucB4Oju2RhmJnM6t8CT9hn0J/qb5wJes0nagoHGKNVA3mAbL6RhlhloJ1VIWPdiaVYHkqBQu9V92EFhl7E10wfxhxF8fkGPo7q+7MDcvs6XGCRGWibuf8Wumj81qnToNOj/OTEXSJn3I0QVhai/M8MjuiUZfdWrso1IJb1goSPLiZKaxAYqH/2eB6oOjPukJI3HkhAoiULm8pcpPzcVztIFWpj/6amqpb+/wmdMBKJFffqncAAL7rVoMmXhxQdtxXKx7R0uDsSD/EzN9/Z9BAvRMIwDWh2qvksVZ+i6TYDBL9msXqLGlIkMfBPJU2RjbLzZYDcr1c2+wrpG9UF imported-openssh-key",
      "metadata": {
        "description": "SSH public key that will be included on all nodes. The OpenSSH public key can be generated with tools like ssh-keygen on Linux or OS X."
      }
    },
    "dataDiskSize": {
      "type": "int",
      "defaultValue": 512,
      "metadata": {
        "description": "The size in GB of each of the data disks that are attached to the VM.  A RAID-0 volume is created with all data disks that is dataDiskSize * dataDiskCount in size."
      }
    },
    "nbDataDisks": {
      "type": "int",
      "defaultValue": 2,
      "maxValue": 16,
      "metadata": {
        "description": "The number of disks to attach to the NFS server."
      }
    },
    "existingVNetName": {
      "type": "string",
      "defaultValue": "VNET-nesdis-sigp",
      "metadata": {
        "description": "name of existing Virtual Network"
      }
    },
    "existingVNetResourceGroup": {
      "type": "string",
       "defaultValue": "NOAA-NESDIS-SIGP",
      "metadata": {
        "description": "name of Resource Group for existing Virtual Network"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "defaultValue": "Subnet-Trusted1",
      "metadata": {
        "description": "name of existing Virtual Network"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "longNamingInfix": "[toLower(parameters('vmPrefix'))]",
    "newStorageAccountSuffix": "[concat(variables('longNamingInfix'), 'sa')]",
    "vnetID": "[resourceId(parameters('existingVNetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('existingVNetName'))]",
    "SubnetRef": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",
    "masterBoxName": "[concat(variables('longNamingInfix'), 'master')]",
    "DiagSAName": "[concat(uniqueString(concat(resourceGroup().id, variables('newStorageAccountSuffix'), 'masterboxsadiag')), 'diag')]",
    "MasterIPConfigName": "[concat(variables('masterBoxName'), 'ipconfig')]",
    "MasterNicName": "[concat(variables('masterBoxName'), 'nic')]",
    "publicIPAddressName": "[concat(variables('masterBoxName'), 'pip')]",
    "MasterimageReference": "[variables('computeImages')[parameters('masterImage')]]",
    "sshKeyPath": "[concat('/home/',parameters('adminUserName'),'/.ssh/authorized_keys')]",
    "computeImages": {
      "CentOS_7.4": {
        "publisher": "OpenLogic",
        "offer": "CentOS",
        "sku": "7.4",
        "version": "latest"
      },
      "RHEL_7.4": {
        "publisher": "RedHat",
        "offer": "RHEL",
        "sku": "7.4",
        "version": "latest"
      }
    },
    "linuxConfiguration_sshPublicKey": {
      "disablePasswordAuthentication": "true",
      "ssh": {
        "publicKeys": [
          {
            "path": "[variables('sshKeyPath')]",
            "keyData": "[parameters('sshPublicKey')]"
          }
        ]
      }
    },
    "linuxConfiguration_password": { },
    "linuxConfiguration": "[variables(concat('linuxConfiguration_',parameters('authenticationType')))]",
    
    "storageAccountType": "Standard_LRS",
    
    "mastervmScripts": {
      "scriptsToDownload": [
        "https://raw.githubusercontent.com/zhifaliu/NESDIS_IAAS/master/setup.sh"
      ],
      "commandToExecute": "bash setup.sh"
    }
  },  
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('DiagSAName')]",
      "location": "[variables('location')]",
      "apiVersion": "2015-06-15",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "apiVersion": "2017-08-01",
      "properties": {
        "publicIPAllocationMethod": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('MasterNicName')]",
      "location": "[variables('location')]",
      "apiVersion": "2018-04-01",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "[variables('MasterIPConfigName')]",
            "properties":  {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                  "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              }, 
              "subnet": {
                  "id": "[variables('SubnetRef')]"
              }
            }
          }
        ],
        "enableAcceleratedNetworking": true
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('masterBoxName')]",
      "location": "[variables('location')]",
      "apiVersion": "2017-03-30",
      "dependsOn": [
        "[concat('Microsoft.Network/networkinterfaces/', variables('MasterNicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('DiagSAName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('MasterVMsku')]"
        },
        "osProfile": {
          "computerName": "[variables('masterBoxName')]",
          "adminUsername": "[parameters('adminUserName')]",
          "adminPassword": "[parameters('adminPassword')]",
          "linuxConfiguration": "[variables('linuxConfiguration')]"
        },
        "storageProfile": {
          "imageReference": "[variables('MasterimageReference')]",
          "osDisk": {
            "caching": "ReadOnly",
            "createOption": "FromImage",
             "managedDisk": {
                "storageAccountType": "Premium_LRS"
             }
          },

          "copy": [{
            "name": "dataDisks",
            "count": "[parameters('nbDataDisks')]",
            "input": {
                "lun": "[copyIndex('dataDisks')]",
                "createOption": "Empty",
                "diskSizeGB": "[parameters('datadiskSize')]"
            }
        }]

         
        },
        "networkProfile": {
          "networkInterfaces": [
            {
               "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('MasterNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
           "storageUri": "[concat('http://',variables('DiagSAName'),'.blob.core.windows.net')]"
          }
        }
      }
    },     
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('masterBoxName'), '/ext')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', variables('masterBoxName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": "[variables('mastervmScripts').scriptsToDownload]"
        },
        "protectedSettings": {
          "commandToExecute": "[variables('mastervmScripts').commandToExecute]"
        }
      }
    }
  ]
}
